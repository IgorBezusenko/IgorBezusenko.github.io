{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.js","components/Form.js","components/Notes.js","components/Loader.js","pages/Home.js","pages/About.js","components/Navbar.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/alertState.js","context/firebase/firebaseReducer.js","context/firebase/firebaseState.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","notes","onRemove","TransitionGroup","component","map","note","CSSTransition","key","id","classNames","timeout","title","date","onClick","Loader","role","Home","loading","fetchNotes","removeNote","useEffect","About","class","Navbar","exact","to","Alert","hide","in","visible","enter","exit","mountOnEnter","unmountOnExit","text","aria-label","aria-hidden","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","process","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","Date","toJSON","post","name","Error","message","delete","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.401dc8a8.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\n\r\nexport const FirebaseContext = createContext();\r\n","import React, { useState, useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\";\r\n\r\nexport const Form = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const alert = useContext(AlertContext);\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (value.trim()) {\r\n      firebase\r\n        .addNote(value.trim())\r\n        .then(() => {\r\n          alert.show(`Заметка была создана `, \"success\");\r\n        })\r\n        .catch(() => {\r\n          alert.show(`Что-то пошло не так `, \"danger\");\r\n        });\r\n\r\n      setValue(\"\");\r\n    } else {\r\n      alert.show(\"Введиде название заметки\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler}>\r\n      <div className=\"form-group\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Введите название заметки\"\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nexport const Notes = ({ notes, onRemove }) => (\r\n  <TransitionGroup component=\"ul\" className=\"list-group\">\r\n    {notes.map((note) => (\r\n      <CSSTransition key={note.id} classNames={\"note\"} timeout={800}>\r\n        <li className=\"list-group-item note\">\r\n          <div>\r\n            <strong>{note.title}</strong>\r\n            <small>{note.date}</small>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            onClick={() => onRemove(note.id)}\r\n          >\r\n            &times;\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"text-center\">\r\n    <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Form } from \"../components/Form\";\r\nimport { Notes } from \"../components/Notes\";\r\nimport { FirebaseContext } from \"../context/firebase/firebaseContext\";\r\nimport { Loader } from \"../components/Loader\";\r\n\r\nexport const Home = () => {\r\n  const { loading, notes, fetchNotes, removeNote } = useContext(\r\n    FirebaseContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Form />\r\n\r\n      <hr />\r\n\r\n      {loading ? <Loader /> : <Notes notes={notes} onRemove={removeNote} />}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => (\r\n  <div class=\"jumbotron \">\r\n    <div class=\"container\">\r\n      <h1 class=\"display-4\">React App</h1>\r\n      <p class=\"lead\">\r\n        Версия приложения <strong>1.0.22</strong>\r\n      </p>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => (\r\n  <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary\">\r\n    <div className=\"navbar-brand\">React App</div>\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" exact to=\"/\">\r\n          Главная\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/about\">\r\n          Информация\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={alert.visible}\r\n      timeout={{\r\n        enter: 500,\r\n        exit: 350,\r\n      }}\r\n      classNames={\"alert\"}\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div\r\n        className={`alert alert-${alert.type || \"warning\"} alert-dismissible`}\r\n      >\r\n        <strong>Внимание! </strong>\r\n        {alert.text}\r\n        <button\r\n          onClick={hide}\r\n          type=\"button\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, { payload }) => ({ ...payload, visible: true }),\r\n  [HIDE_ALERT]: (state) => ({ ...state, visible: false }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.DEFAULT;\r\n  return handle(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\n\r\nexport const SHOW_LOADER = \"SHOW_LOADER\";\r\nexport const ADD_NOTE = \"ADD_NOTE\";\r\nexport const FETCH_NOTES = \"FETCH_NOTES\";\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\";\r\n","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./alertReducer\";\r\nimport { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, { visible: false });\r\n\r\n  const show = (text, type = \"warning\") => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { text, type },\r\n    });\r\n  };\r\n  const hide = () => dispatch({ type: HIDE_ALERT });\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        show,\r\n        hide,\r\n        alert: state,\r\n      }}\r\n    >\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import { SHOW_LOADER, ADD_NOTE, FETCH_NOTES, REMOVE_NOTE } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_LOADER]: (state) => ({ ...state, loading: true }),\r\n  [ADD_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: [...state.notes, payload],\r\n  }),\r\n  [FETCH_NOTES]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: payload,\r\n    loading: false,\r\n  }),\r\n  [REMOVE_NOTE]: (state, { payload }) => ({\r\n    ...state,\r\n    notes: state.notes.filter((note) => note.id !== payload),\r\n  }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n  const handle = handlers[action.type] || handlers.DEFAULT;\r\n  return handle(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { FirebaseContext } from \"./firebaseContext\";\r\nimport { firebaseReducer } from \"./firebaseReducer\";\r\nimport axios from \"axios\";\r\nimport { SHOW_LOADER, REMOVE_NOTE, ADD_NOTE, FETCH_NOTES } from \"../types\";\r\n\r\nconst url = process.env.REACT_APP_BD_URL;\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n  const initialState = {\r\n    notes: [],\r\n    loading: false,\r\n  };\r\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\r\n\r\n  const showLoader = () => dispatch({ type: SHOW_LOADER });\r\n\r\n  const fetchNotes = async () => {\r\n    showLoader();\r\n\r\n    const res = await axios.get(`${url}/notes.json`);\r\n    const payload = Object.keys(res.data).map((key) => {\r\n      return {\r\n        ...res.data[key],\r\n        id: key,\r\n      };\r\n    });\r\n\r\n    dispatch({ type: FETCH_NOTES, payload });\r\n  };\r\n\r\n  const addNote = async (title) => {\r\n    const note = {\r\n      title,\r\n      date: new Date().toJSON(),\r\n    };\r\n    try {\r\n      const res = await axios.post(`${url}/notes.json`, note);\r\n      const payload = {\r\n        ...note,\r\n        id: res.data.name,\r\n      };\r\n\r\n      dispatch({ type: ADD_NOTE, payload });\r\n    } catch (e) {\r\n      throw new Error(e.message);\r\n    }\r\n  };\r\n\r\n  const removeNote = async (id) => {\r\n    await axios.delete(`${url}/notes/${id}.json`);\r\n    dispatch({\r\n      type: REMOVE_NOTE,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        showLoader,\r\n        addNote,\r\n        fetchNotes,\r\n        removeNote,\r\n        loading: state.loading,\r\n        notes: state.notes,\r\n      }}\r\n    >\r\n      {children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\n\nimport { Navbar } from \"./components/Navbar\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/alertState\";\nimport { FirebaseState } from \"./context/firebase/firebaseState\";\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Switch>\n              <Route path={\"/\"} exact component={Home} />\n              <Route path={\"/about\"} component={About} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </FirebaseState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}